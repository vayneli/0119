cmake_minimum_required(VERSION 3.5)
project(realsense_test)
find_package(OpenCV  REQUIRED)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -g -O0")
include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/libBase/include)
include_directories(${PROJECT_SOURCE_DIR}/libPid/include)
include_directories(${PROJECT_SOURCE_DIR}/libHardWare/usbCapture/include)
include_directories(${PROJECT_SOURCE_DIR}/libDetection/include)
#FILE(GLOB SRC *.hpp *.cpp)

add_executable(${PROJECT_NAME} realsense_detect_test.cpp)
#add_executable(${PROJECT_NAME} ${SRC})
target_link_libraries(${PROJECT_NAME} Base pthread UsbCapture)
target_link_libraries(${PROJECT_NAME} Detection)
target_link_libraries(${PROJECT_NAME} Pid)
target_link_libraries(${PROJECT_NAME} ${OpenCV_LIBS} librealsense2.so)
target_link_libraries(${PROJECT_NAME} libncurses.so.5)

add_executable(realsense_size realsense_size_detect.cpp)
target_link_libraries(realsense_size Base pthread UsbCapture)
target_link_libraries(realsense_size Detection)
target_link_libraries(realsense_size Pid)
target_link_libraries(realsense_size ${OpenCV_LIBS} librealsense2.so)
target_link_libraries(realsense_size libncurses.so.5)

add_executable(get_xyz getXYZ_realsense.cpp)
target_link_libraries(get_xyz Base pthread UsbCapture)
target_link_libraries(get_xyz Detection)
target_link_libraries(get_xyz Pid)
target_link_libraries(get_xyz ${OpenCV_LIBS} librealsense2.so)
target_link_libraries(get_xyz libncurses.so.5)

add_executable(Min_Z Min_testZ.cpp)
target_link_libraries(Min_Z Base pthread UsbCapture)
target_link_libraries(Min_Z Detection)
target_link_libraries(Min_Z Pid)
target_link_libraries(Min_Z ${OpenCV_LIBS} librealsense2.so)
target_link_libraries(Min_Z libncurses.so.5)

#AUX_SOURCE_DIRECTORY(./src Pid_SRCS)
#ADD_LIBRARY(Pid ${Pid_SRCS})
